all_mev_blocker_bundle_per_block: 4086593 # The Dune query ID used for fetching data

start_block: null  # Specify the start block manually, or leave as null to infer
end_block: null  # Specify the end block manually, or leave as null to infer
polling_rate_seconds: 10  # Polling interval in seconds to check the status of the Dune query
block_delay_seconds: 10  # Delay in seconds to ensure data availability for the end block

validate_sql: false  # Set to true to enable SQL validation, false to disable. False by default, as function is available only for paid Dune clients
num_blocks_to_process: "all" # Set this to "all" to gather all blocks, or specify a number
abort_on_empty_first_query: false  # Set to false to proceed with the next query if 1st is returning 0 results.


# Data Storage Configuration
data_storage:
  data_directory: "data"  # Directory to store block and bundle data
  logs_directory: "logs"  # Directory to store log files
  simulation_output_directory: simulated_blocks # The foldername which is crucial to see already simulated blocks/bundles
  log_filename: "logfile.log"  # The filename for the log file

# Error Handling and Logging
error_handling:
  log_errors: true  # Enable or disable error and logging

# Performance Tuning
performance_tuning:
  use_multiprocessing: true  # Enable or disable multiprocessing
  max_processes: auto  # Maximum number of processes ('auto' uses all available CPUs)

bundle_simulation:
  max_selected_bundles: 10  # Maximum number of bundles to select using the greedy algorithm
  simulation_enabled: true  # Enable or disable the simulation of selected bundles
  simulation_output_file: "simulation_results.json"  # The filename for storing simulation results

# Simulation and State Management Configuration
simulation:
  state_management_enabled: true  # Enable or disable state management during simulation
  trace_call_enabled: true  # Enable or disable trace_callMany for transaction simulation
  trace_output_file: "trace_results.json"  # The filename for storing trace results

# Rate Limiting and Retry Settings (needed only in case of free infura plan or not powerful self-hosted RPC)
rate_limit_handling:
  enable_retry: true  # Add this option to enable or disable the retry logic
  max_retries: 3  # Maximum number of retry attempts for rate-limited requests
  initial_delay_seconds: 5  # Initial delay before retrying (in seconds)
  exponential_backoff: true  # Enable or disable exponential backoff for retries
  calls_per_minute: 60  # New parameter: maximum number of calls allowed per minute
  # rate_limit_handling can be simplified if needed.